// ✅ STEP 1: The 'plugins' block MUST be at the very top.
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

// ✅ STEP 2: The property-loading code goes AFTER the plugins block.
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

// ✅ STEP 3: The rest of the file follows.
android {
    namespace 'com.lilianaisuan.mysightguide'
    compileSdk 34

    defaultConfig {
        applicationId "com.lilianaisuan.mysightguide"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // This line reads the key from the 'localProperties' object defined above.
        buildConfigField("String", "GEMMA_API_KEY", "\"${localProperties.getProperty('AIzaSyCtay4qMzmR93mYyq3DpYjMJcLh07wfnWs', '')}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    // Core Android & UI
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.activity:activity-ktx:1.8.2" // Provides 'by viewModels()'

    // Hilt for Dependency Injection
    implementation "com.google.dagger:hilt-android:2.48"
    kapt "com.google.dagger:hilt-android-compiler:2.48"

    // Coroutines and Lifecycle for asynchronous work and ViewModels
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.7.0"

    // CameraX for camera functionality
    def camerax_version = "1.3.1"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"

    // This line adds the library needed for ObjectDetector
    implementation 'com.google.mediapipe:tasks-vision:0.10.14'

    // AI Libraries
    // ADD the new Google AI Edge SDK dependencies for Gemma
    implementation("com.google.android.ai:edge-gemma:0.2.0")
    implementation("com.google.android.ai:edge-common:0.2.0")
    implementation 'com.google.ai.client.generativeai:generativeai:0.6.0' // Provides Gemma/Gemini cloud API

    // ✅ ADD THIS for Text Recognition (OCR)
    implementation 'com.google.mlkit:text-recognition:16.0.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}